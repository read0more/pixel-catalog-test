import urlencode from "urlencode";
import Head from "next/head";
import { useEffect } from 'react'
import { useRouter } from 'next/router'

const Product = (props) => {
  const router = useRouter();
  const hasProps = !!(Object.keys(props).length);

  console.log(props);
  useEffect(() => {
    import('react-facebook-pixel')
      .then((x) => x.default)
      .then((ReactPixel) => {
        let data = {};
        if (hasProps) {
          data = { content_name: props.title, content_category: 'Apparel & Accessories > shirts', content_ids: [props.retailer_item_id], content_type: 'product', value: props.amount, currency: props.currency };
        }
        ReactPixel.init(process.env.NEXT_PUBLIC_FACEBOOK_PIXEL_ID);
        ReactPixel.track('ViewContent', data);
      })
  }, [router.events]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {hasProps ? (
          <>
            <meta property="og:title" content={props.title} />
            <meta
              property="og:description"
              content={props.description}
            />
            <meta property="og:url" content={props.url} />
            <meta
              property="og:image"
              content={props.image}
            />
            <meta property="product:brand" content={props.brand} />
            <meta property="product:availability" content={props.availability} />
            <meta property="product:condition" content={props.condition} />
            <meta property="product:price:amount" content={props.amount} />
            <meta property="product:price:currency" content={props.currency} />
            <meta
              property="product:retailer_item_id"
              content={props.retailer_item_id}
            />
          </>
        ) : (
          <></>
        )}
      </Head>
      <main>
        view content
      </main>
    </div>
  );
};

export const getServerSideProps = async ({ req, resolvedUrl }) => {
  console.log(resolvedUrl);
  let tempBody = "";

  const bodyPromise = new Promise((resolve) => {
    req.on("data", (chunk) => {
      tempBody += chunk;
    });

    req.on("end", () => {
      resolve(tempBody);
    });
  });

  let body = await bodyPromise;
  let props = { url: `${process.env.NEXT_PUBLIC_APP_URL}${resolvedUrl}` };

  if (body) {
    body = urlencode.decode(body).split("&");

    if (Array.isArray(body)) {
      body.forEach((keyValue) => {
        const [key, value] = keyValue.split("=");
        props[key] = value;
      });
    }
  }

  return { props };
};

export default Product;
